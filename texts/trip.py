# texts/trip.py

location_hint = (
    "üèô –í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥/—Å—Ç—Ä–∞–Ω—É, –∫—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–µ—Ö–∞—Ç—å:\n"
    "<i>–î–æ–ø—É—Å—Ç–∏–º—ã —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã. –ü—Ä–∏–º–µ—Ä: –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥</i>"
)

date_format_error = (
    "‚ö† –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>–î–î.–ú–ú.–ì–ì–ì–ì</b>.\n"
    "–ü—Ä–∏–º–µ—Ä: 12.08.2025"
)
description_too_long = "‚ö† –û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –£–∫–æ—Ä–æ—Ç–∏—Ç–µ –¥–æ 300 —Å–∏–º–≤–æ–ª–æ–≤."
date_from_hint = "üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –ø–æ–µ–∑–¥–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 12.08.2025):"
date_to_hint = "üìÖ –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–µ–∑–¥–∫–∏:"
purpose_hint = "üéØ –£–∫–∞–∂–∏—Ç–µ —Ü–µ–ª—å –ø–æ–µ–∑–¥–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –æ—Ç–¥—ã—Ö, –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è, —Ä–∞–±–æ—Ç–∞ –∏ —Ç.–¥.):"
purpose_manual_hint = "‚úè –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Ü–µ–ª—å –ø–æ–µ–∑–¥–∫–∏:"
companions_hint = "üßç –ö–æ–≥–æ –≤—ã –∏—â–µ—Ç–µ –≤ –ø–æ–ø—É—Ç—á–∏–∫–∏?"
companions_manual_hint = "‚úè –í–≤–µ–¥–∏—Ç–µ, –∫–æ–≥–æ –≤—ã –∏—â–µ—Ç–µ –≤ –ø–æ–ø—É—Ç—á–∏–∫–∏:"
description_hint = (
    "üìù –î–æ–±–∞–≤—å—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–¥–æ 300 —Å–∏–º–≤–æ–ª–æ–≤):\n"
    "<i>–ù–∞–ø—Ä–∏–º–µ—Ä: –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ, Instagram, —É—Å–ª–æ–≤–∏—è –ø–æ–µ–∑–¥–∫–∏, –Ω–∞–ª–∏—á–∏–µ –º–∞—à–∏–Ω—ã –∏ —Ç.–ø.</i>"
)

profile_template = """üë§ –ü—Ä–æ—Ñ–∏–ª—å {first_name} {last_name} (@{username})

üìå –ü–æ–µ–∑–¥–∫–∏:
{trips}
"""

trip_line_template = """‚Äî {location} ({date_from} ‚Äî {date_to}): {purpose}, {companions}"""


# üí¨ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–µ–∑–¥–∫–∏
def format_trip_card(trip, author: dict=None, is_own: bool=False) -> str:
    if isinstance(trip, dict):
        # trip ‚Äî —ç—Ç–æ dict –∏–∑ create_trip, —Ä–∞—Å–∫–ª–∞–¥—ã–≤–∞–µ–º –ø–æ –∫–ª—é—á–∞–º
        rowid       = trip.get("rowid")       # –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å ID
        user_id     = trip.get("user_id")
        username    = trip.get("username")
        country     = trip.get("country")
        location    = trip.get("location")
        date_from   = trip.get("date_from")
        date_to     = trip.get("date_to")
        purpose     = trip.get("purpose")
        companions  = trip.get("companions")
        description = trip.get("description")
        insert_dttm = trip.get("insert_dttm", "")  # –∏–ª–∏ datetime.now()
    else:
        # —Å—Ç–∞—Ä—ã–π –≤–∞—Ä–∏–∞–Ω—Ç ‚Äî –∫–æ—Ä—Ç–µ–∂
        (
            rowid, user_id, username, country, location,
            date_from, date_to, purpose, companions,
            description, insert_dttm
        ) = trip

    # –¥–∞–ª–µ–µ –æ–±—â–∏–π –∫–æ–¥ —Å–±–æ—Ä–∫–∏ —Ç–µ–∫—Å—Ç–∞‚Ä¶
    username_display = f"@{username}" if username else "<i>–∞–Ω–æ–Ω–∏–º</i>"

    text = (
        f"üåç <b>–°—Ç—Ä–∞–Ω–∞:</b> {country or '‚Äî'}\n"
        f"üåç <b>–ú–µ—Å—Ç–æ:</b> {location or '‚Äî'}\n"
        f"üìÖ <b>–°:</b> {date_from or '‚Äî'}\n"
        f"üìÖ <b>–ü–æ:</b> {date_to or '‚Äî'}\n"
        f"üéØ <b>–¶–µ–ª—å:</b> {purpose or '‚Äî'}\n"
        f"üßç <b>–°–ø—É—Ç–Ω–∏–∫–∏:</b> {companions or '‚Äî'}\n"
        f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {description or '‚Äî'}\n"
        f"‚è±Ô∏è <b>–î–æ–±–∞–≤–ª–µ–Ω–æ:</b> {insert_dttm or '‚Äî'}\n"
    )

    if not is_own and author:
        text += "\n"
        text += f"üë§ <b>{author.get('full_name', '‚Äî')}</b> "
        if author.get("username"):
            text += f"(@{author['username']})\n"
        text += f"üèô {author.get('city', '‚Äî')}\n"
        text += f"üö∂ {author.get('traveler_type', '‚Äî')}\n"
        text += f"üéØ –ò–Ω—Ç–µ—Ä–µ—Å—ã: {author.get('interests', '‚Äî')}\n"
        text += f"üìù –û —Å–µ–±–µ: {author.get('bio', '‚Äî')}"

    return text



def render_profile_template(user: dict, trips: list) -> str:
    def trip_to_dict(trip):
        if isinstance(trip, dict):
            return trip
        return {
            "location": trip[4],
            "date_from": trip[5],
            "date_to": trip[6],
            "purpose": trip[7],
            "companions": trip[8]
        }

    if trips:
        trips_text = "\n".join([
            trip_line_template.format(**trip_to_dict(trip)) for trip in trips
        ])
    else:
        trips_text = "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–∫."

    return profile_template.format(
        first_name=user.get("first_name", ""),
        last_name=user.get("last_name", ""),
        username=user.get("username", "–±–µ–∑ username"),
        trips=trips_text
    )

