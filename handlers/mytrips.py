from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from database import get_trips_by_user, delete_trip_by_user
from texts.trip import format_trip_card
from database import get_user_by_id
from logger import get_logger

logger = get_logger(__name__)
router = Router()

@router.message(Command("mytrips"))
async def show_my_trips(message: Message):
    user_id = message.from_user.id
    trips = get_trips_by_user(user_id)

    if not trips:
        await message.answer("üì≠ –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–∫.")
        return

    author = get_user_by_id(user_id)

    for trip in trips:
        # trip —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ 11 –Ω—É–∂–Ω—ã—Ö –ø–æ–ª–µ–π
        text = format_trip_card(trip, author, is_own=True)

        rowid = trip[0]
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete:{rowid}")]
            ]
        )

        await message.answer(text, reply_markup=keyboard, parse_mode="HTML")

@router.callback_query(F.data.startswith("delete:"))
async def delete_trip_callback(callback: CallbackQuery):
    user_id = callback.from_user.id
    trip_id = int(callback.data.split(":")[1])

    success = delete_trip_by_user(trip_id, user_id)

    if success:
        await callback.message.edit_text("‚úÖ –ü–æ–µ–∑–¥–∫–∞ —É–¥–∞–ª–µ–Ω–∞.")
    else:
        await callback.answer("‚ùå –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —á—É–∂—É—é –ø–æ–µ–∑–¥–∫—É.", show_alert=True)

# –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
async def show_user_trips(message: Message):
    await show_my_trips(message)
