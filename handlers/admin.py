from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from config import ADMINS
from database import get_all_trips, delete_trip, delete_trips_by_user
import re
from texts.trip import format_trip_card

router = Router()

@router.message(Command("admin"))
async def admin_panel(message: Message):
    if message.from_user.id not in ADMINS:
        await message.answer("‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∫–µ.")
        return

    trips = get_all_trips()
    if not trips:
        await message.answer("üì≠ –í –±–∞–∑–µ –ø–æ–∫–∞ –ø—É—Å—Ç–æ.")
        return

    text = f"üìã –í—Å–µ–≥–æ –ø–æ–µ–∑–¥–æ–∫ –≤ –±–∞–∑–µ: <b>{len(trips)}</b>\n"
    text += "–ù–∞–ø–∏—à–∏ <code>/delete 3</code> ‚Äî —É–¥–∞–ª–∏—Ç—å –ø–æ–µ–∑–¥–∫—É –ø–æ ID\n"
    text += "–ò–ª–∏ <code>/delete u123456789</code> ‚Äî —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø–æ–µ–∑–¥–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
    await message.answer(text, parse_mode="HTML")


@router.message(Command("delete"))
async def delete_trip_cmd(message: Message):
    if message.from_user.id not in ADMINS:
        await message.answer("‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —É–¥–∞–ª–µ–Ω–∏—é.")
        return

    text = message.text.strip()

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ user_id ‚Äî /delete u123456789
    match_user = re.match(r"/delete\s+u(\d+)", text)
    if match_user:
        user_id = int(match_user.group(1))
        count = delete_trips_by_user(user_id)
        if count > 0:
            await message.answer(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø–æ–µ–∑–¥–æ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {count}")
        else:
            await message.answer(f"‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –Ω–µ—Ç –ø–æ–µ–∑–¥–æ–∫.")
        return

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ trip ID ‚Äî /delete 5
    match_trip = re.match(r"/delete\s+(\d+)", text)
    if match_trip:
        trip_id = int(match_trip.group(1))
        success = delete_trip(trip_id)
        if success:
            await message.answer(f"‚úÖ –ü–æ–µ–∑–¥–∫–∞ —Å ID {trip_id} —É–¥–∞–ª–µ–Ω–∞.")
        else:
            await message.answer(f"‚ùå –ü–æ–µ–∑–¥–∫–∞ —Å ID {trip_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    # –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    await message.answer(
        "‚ö† –£–∫–∞–∂–∏ ID –ø–æ–µ–∑–¥–∫–∏ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\n"
        "<code>/delete 3</code> ‚Äî —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω—É –ø–æ–µ–∑–¥–∫—É\n"
        "<code>/delete u123456789</code> ‚Äî —É–¥–∞–ª–∏—Ç—å –í–°–ï –ø–æ–µ–∑–¥–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        parse_mode="HTML"
    )
