from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from keyboards_main import menu_keyboard
from handlers.create_trip import start_trip_creation
from handlers.mytrips import show_my_trips
from keyboards.trip import get_search_filter_keyboard
from database import is_user_registered
from handlers.profile import show_profile
from handlers.register import register_start
from texts.trip import format_trip_card
from aiogram import Router, types
from logger import get_logger

logger = get_logger(__name__)
router = Router()

@router.message(Command("start"))
async def handle_start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üëã –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –ø–æ–ø—É—Ç—á–∏–∫–æ–≤ ‚úàÔ∏è",
        reply_markup=menu_keyboard
    )

@router.message(F.text == "‚ûï –°–æ–∑–¥–∞—Ç—å –ø–æ–µ–∑–¥–∫—É")
async def handle_create_button(message: Message, state: FSMContext):
    if not is_user_registered(message.from_user.id):
        await message.answer("‚ùóÔ∏è–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.\n–ù–∞–∂–º–∏ /register.")
        return
    await start_trip_creation(message, state)

@router.message(F.text == "üß≥ –ú–æ–∏ –ø–æ–µ–∑–¥–∫–∏")
async def handle_mytrips_button(message: Message):
    if not is_user_registered(message.from_user.id):
        await message.answer("‚ùóÔ∏è–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ –ø–æ–µ–∑–¥–∫–∏.\n–ù–∞–∂–º–∏ /register.")
        return
    await show_my_trips(message)

@router.message(F.text == "üîé –ü–æ–∏—Å–∫")
async def handle_find_button(message: Message):
    if not is_user_registered(message.from_user.id):
        await message.answer("‚ùóÔ∏è–ü–æ–∏—Å–∫ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n–ù–∞–∂–º–∏ /register.")
        return
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–µ–∑–¥–∫–∏:",
        reply_markup=get_search_filter_keyboard()
    )

@router.message(F.text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
async def handle_profile(message: Message, state: FSMContext):
    if not is_user_registered(message.from_user.id):
        await message.answer("‚ùóÔ∏è–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.\n–ù–∞—á–Ω–µ–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å ‚¨áÔ∏è")
        await register_start(message, state)  # üëâ —Å—Ä–∞–∑—É —É–≤–æ–¥–∏–º –≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        return
    await show_profile(message)
