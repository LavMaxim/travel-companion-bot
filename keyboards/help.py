from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from texts.help import faq_category_general_questions
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from texts.help import faq_category_general_questions

def help_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚ùì FAQ",            callback_data="help:faq")],
            [InlineKeyboardButton(text="üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏",     callback_data="help:instr")],
            [InlineKeyboardButton(text="‚úâÔ∏è –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", callback_data="help:feedback")],
        ]
    )

def faq_categories_kb() -> InlineKeyboardMarkup:
    buttons = [
        [InlineKeyboardButton(text=cat.title(), callback_data=f"faq:category:{cat}")]
        for cat in faq_category_general_questions.keys()
    ] + [
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="help:menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def faq_questions_kb(category: str) -> InlineKeyboardMarkup:
    qs = faq_category_general_questions.get(category, [])
    buttons = [
        [InlineKeyboardButton(text=q, callback_data=f"faq:question:{category}:{idx}")]
        for idx, q in enumerate(qs)
    ] + [
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="help:faq")],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="help:menu")],
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def faq_answers_kb(category: str) -> InlineKeyboardMarkup:
    # –ö–Ω–æ–ø–∫–∞ ¬´–ù–∞–∑–∞–¥¬ª —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ —Å–ø–∏—Å–∫—É –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–º–µ–Ω–Ω–æ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"faq:category:{category}")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="help:menu")],
        ]
    )

def instruction_main_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üõ† –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –ø–æ–µ–∑–¥–∫—É", callback_data="instr:create:0")],
            [InlineKeyboardButton(text="ü§ù –ö–∞–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è",   callback_data="instr:join:0")],
            [InlineKeyboardButton(text="üìã –ì–¥–µ –º–æ–∏ –ø–æ–µ–∑–¥–∫–∏",      callback_data="instr:view:0")],
            [InlineKeyboardButton(text="üîç –ö–∞–∫ –∏—Å–∫–∞—Ç—å –ø–æ–µ–∑–¥–∫–∏",   callback_data="instr:search:0")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",         callback_data="help:menu")],
        ]
    )

def instruction_kb(topic: str, idx: int, total: int) -> InlineKeyboardMarkup:
    buttons = []
    if idx + 1 < total:
        buttons.append([
            InlineKeyboardButton(
                text=f"–°–ª–µ–¥—É—é—â–∏–π ({idx+1}/{total}) ‚ñ∂Ô∏è",
                callback_data=f"instr:{topic}:{idx+1}"
            )
        ])
    buttons.append([
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="help:menu")
    ])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def feedback_type_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚ùì –í–æ–ø—Ä–æ—Å", callback_data="fb:type:question")],
            [InlineKeyboardButton(text="üêû –ë–∞–≥",    callback_data="fb:type:bug")],
            [InlineKeyboardButton(text="üí° –ò–¥–µ—è",   callback_data="fb:type:idea")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="fb:cancel")],
        ]
    )

def feedback_cancel_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="fb:cancel")],
        ]
    )
